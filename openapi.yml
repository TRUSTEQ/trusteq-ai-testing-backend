openapi: 3.0.0
info:
  title: user-management-service
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /api/users:
    get:
      summary: Get All Users
      tags:
        - User
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      summary: Create User
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/users/{id}:
    get:
      summary: Get User by Id
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      summary: Update User
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      summary: Delete User by Id
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
  /api/companies:
    get:
      summary: Get All Companies
      tags:
        - Company
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyResponse'
    post:
      summary: Create Company
      tags:
        - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
  /api/companies/{id}:
    get:
      summary: Get Company by Id
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
    put:
      summary: Update Company
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
    delete:
      summary: Delete Company by Id
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
  /api/search:
    get:
      summary: Find entity by name
      tags:
        - Search
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNameTypeResponse'
components:
  schemas:
    CompanyRequest:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
    CompanyResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    UserRequest:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
        email:
          type: string
        companyId:
          type: integer
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
        email:
          type: string
    IdNameTypeResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
            - USER
            - COMPANY